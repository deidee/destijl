
{%- set urls %}
    {%- include '_75.txt.twig' %}
{% endset %}

{% set urlset = urls|split("\r") %}

<svg class="heticoon" viewBox="0 0 {{ (heticoon.data.length + 1) * heticoon.size }} {{ (heticoon.data.length + 1) * heticoon.size }}">
    {%- set i = 0 %}
    {%- set x = heticoon.size %}
    {%- set y = heticoon.size %}
    {%- for line in heticoon.data %}
        {%- for col in line %}
            {%- if col %}
                <a xlink:href="{{- urlset[i] }}">
                    <rect x="{{ x }}" y="{{ y }}" width="{{ heticoon.size + random(2) }}" height="{{ heticoon.size + random(2) }}"></rect>
                </a>
                {%- set i = i + 1 %}
            {%- endif %}
            {%- set x = x + heticoon.size %}
        {%- endfor %}
        {%- set y = y + heticoon.size %}
        {%- set x = heticoon.size %}
    {% endfor %}
</svg>

<script>
    "use strict";

    const hetIcoon = document.querySelector('.heticoon');

    for (const blok of hetIcoon.children) {
        const rect = blok.querySelector('rect');
        rect.style.fill = deJade();
        rect.style.fillOpacity = ".5";
        rect.addEventListener('mouseenter', function(e){
            e.preventDefault();
            e.target.style.fill = deJade();
            e.target.style.transform = 'scale(' + (1 + Math.random() * 1.5) + ') rotate(' + (Math.random() * 30) + 'deg)';
        });
        rect.addEventListener('mouseleave', function(e){
            e.preventDefault();
            e.target.style.transform = 'none';
        });
    }

    function deJade()
    {
        let r = Math.round(127 * Math.random());
        let g = Math.round(Math.random() * 128 + 127);
        let b = Math.round(191 * Math.random());
        return 'rgb(' + r + ', ' + g + ', ' + b + ')';
    }
</script>